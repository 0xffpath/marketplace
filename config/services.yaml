# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    image_directory: '%kernel.project_dir%/public/uploads/images'
    forum: 'https://example.com'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    security.authentication.success_handler:
        class: App\Handler\AuthenticationSuccessHandler
        arguments:  [ "@security.http_utils", {}, "@doctrine.orm.entity_manager" ]
        tags:
            - { name: 'monolog.logger', channel: 'security' }
    my.handler.autologout:
        class: App\Handler\AutoLogoutHandler
        arguments: [ "@session", "@security.token_storage", "@router", "@service_container" ]
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest' }
    App\Service\Mailer:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Service\Categories:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Service\Countries:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Service\Wishlist:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Service\DashboardNotifications:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Service\Profile:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Service\Currency:
        arguments: [ "@doctrine.orm.entity_manager" ]
        public: true
    App\Service\ListingImages:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage", '%image_directory%' ]
        public: true
    App\Service\Experience:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Service\CryptoAddressValidator:
        public: true
    App\Service\BBCode:
        public: true
    App\Service\Securimage:
        public: true
    App\Service\Config:
        public: true
    App\Service\Wallet\WalletFactory:
        public: true
    App\Service\Pay:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Service\WalletDerive:
        public: true
    App\Service\ListingManager:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage", '%image_directory%' ]
        public: true
    App\Service\ListingDisable:
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
        public: true
    App\Listener\LoginListener:
        arguments: [ "@doctrine.orm.entity_manager" ]
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }